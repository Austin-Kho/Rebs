apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx.fullname" . }}
  labels:
    {{- include "nginx.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nginx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nginx.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "nginx.fullname" . }}-config
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet: # HttpGet 메소드로 점검
              host: {{ .Values.ingress.hosts[0].host }}
              path: /                 # 체크할 경로
              port: {{ if gt (len .Values.ingress.tls) 0 }}443{{ else }}80{{ end }}  # 체크할 Port
              scheme: {{ if gt (len .Values.ingress.tls) 0 }}HTTPS{{ else }}HTTP{{ end }}
            initialDelaySeconds: 5    # 최초 5초 후에 LivenessProbe 체크를 시작함
            periodSeconds: 30         # 10초마다 LivenessProbe 체크
            failureThreshold: 3       # 3번 실패시 Pod Restart
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              readOnly: true
              subPath: nginx.conf
            - name: conf-d
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: static
              mountPath: /django/static
            - name: media
              mountPath: /django/media
            - name: tz-seoul
              mountPath: /etc/localtime
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "nginx.fullname" . }}-config
            items:
              - key: NGINX.CONF
                path: nginx.conf
        - name: conf-d
          configMap:
            name: {{ include "nginx.fullname" . }}-config
            items:
              - key: LOG.CONF
                path: log.conf
              - key: UPSTREAM.CONF
                path: upstream.conf
              - key: PUBLIC.CONF
                path: public.conf
        - name: static
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ include "nginx.fullname" . }}-{{ .Values.global.appMode }}-static-pvc
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ include "nginx.fullname" . }}-{{ .Values.global.appMode }}-media-pvc
        - name: tz-seoul
          hostPath:
            path: /usr/share/zoneinfo/Asia/Seoul
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

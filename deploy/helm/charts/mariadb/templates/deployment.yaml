apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mariadb.fullname" . }}
  labels:
    {{- include "mariadb.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      {{- include "mariadb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mariadb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mariadb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          envFrom:
            - configMapRef:
                name: {{ include "mariadb.fullname" . }}-config
            - secretRef:
                name: {{ include "mariadb.fullname" . }}-db-auth
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          startupProbe:
            exec:
              command: [ "mariadb-admin", "ping", "-u{{ .Release.Name }}", "-p{{ .Values.global.dbPassword }}" ]
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 10
            successThreshold: 1
          readinessProbe:
            exec:
              command: [ "mariadb-admin", "ping", "-u{{ .Release.Name }}", "-p{{ .Values.global.dbPassword }}" ]
            periodSeconds: 30          # 30초마다 상태 확인
            timeoutSeconds: 1          # 1초 후에 실패로 간주
            failureThreshold: 2        # 몇 번 실패해야 Pod를 실패로 판단할 것인지
            successThreshold: 1        # 몇 번 성공해야 Ready 상태로 간주할 것인지
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
            - name: dump-backup
              mountPath: /var/backups
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ include "mariadb.fullname" . }}-{{ .Values.global.appMode }}-data-pvc
        - name: init-sql
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ include "mariadb.fullname" . }}-{{ .Values.global.appMode }}-sql-pvc
        - name: dump-backup
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ include "mariadb.fullname" . }}-{{ .Values.global.appMode }}-backup-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-{{ .Values.global.appMode }}-client-provisioner
  labels:
    app: nfs-client-provisioner
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nfs-client-provisioner
  template:
    metadata:
      labels:
        app: nfs-client-provisioner
    spec:
      serviceAccountName: nfs-client-provisioner
      containers:
        - name: nfs-client-provisioner
          image: registry.k8s.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: k8s-sigs.io/nfs-subdir-external-provisioner
            - name: NFS_SERVER
              value: {{ .Values.global.cicdServerHost }}
            - name: NFS_PATH
              value: {{ .Values.global.cicdPath }}/{{ .Values.global.appMode }}/volume
      volumes:
        - name: nfs-client-root
          nfs:
            server: {{ .Values.global.cicdServerHost }}
            path: {{ .Values.global.cicdPath }}/{{ .Values.global.appMode }}/volume

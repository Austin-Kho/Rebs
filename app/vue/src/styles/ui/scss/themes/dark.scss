@import "@coreui/coreui/scss/functions";
@import "@coreui/coreui/scss/variables";
@import "@coreui/coreui/scss/maps";
@import "@coreui/coreui/scss/mixins";
@import "./../mixins/theme";
@import "@coreui/coreui/scss/utilities";


$theme-name: 'dark-theme' !default;
$theme-prefix: 'dark' !default;

.#{$theme-name} {
  @import 'dark/variables';
  @import 'dark/utilities';
  @import 'dark/root';

  @include theme($theme-map);

  // Alert variants
  @each $state, $value in $alert-variants-dt {
    $alert-background: map-get($value, 'alert-bg');
    $alert-border: map-get($value, 'alert-border');
    $alert-color: map-get($value, 'alert-color');

    @if (contrast-ratio($alert-background, $alert-color) < $min-contrast-ratio) {
      $alert-color: mix(
                      map-get($value, 'base-color'),
                      color-contrast($alert-background),
                      abs($alert-color-scale)
      );
    }
    .alert-#{$state} {
      @include alert-variant($alert-background, $alert-border, $alert-color);
    }
  }

  // Button variants
  @each $state, $variant in $button-variants-dt {
    .btn-#{$state} {
      @include button-variant($variant);
    }
  }

  @each $state, $variant in $button-outline-ghost-variants-dt {
    .btn-outline-#{$state} {
      @include button-outline-variant($variant);
    }
  }

  @each $state, $variant in $button-outline-ghost-variants-dt {
    .btn-ghost-#{$state} {
      @include button-ghost-variant($variant);
    }
  }

  // List group variants
  @each $state, $variant in $list-group-variants-dt {
    .list-group-item-#{$state} {
      @include list-group-item-variant($state, $variant);
    }
  }

  // Fix Firefox option color
  @-moz-document url-prefix("") {
    select:not([multiple]) option {
      color: initial;
    }
  }

  // Utilities
  @import "@coreui/coreui/scss/utilities/api";

  // User Customizing
  $form-switch-color: rgba($black, .25) !default;

  .wrapper {
    background-color: $bg-elevation-0 !important;
  }

  .breadcrumb-item.active {
    color: $medium-emphasis-inverse;
  }

  .tab-content {
    @at-root .dark-theme & {
      background-color: rgba(255, 255, 255, 0.1) !important;
    }
  }

  .form-text {
    color: $medium-emphasis-inverse;
  }

  select > option {
    background: #2f303a !important;
  }

  // tinymce
  .tox-toolbar__primary {
    background-color: #24252f !important;
  }

  .mce-content-body {
    background-color: #2f303a !important;
  }
}
